server:
  port: 0

# General Config
spring:
    application:
      name: info
    zipkin:
      base-url: ${ZIPKIN_URL}
    cloud:
      consul:
        config:
          fail-fast: true
          #import-check.enabled: true
        host: ${CONSUL_HOST}
        port: ${CONSUL_PORT}
        discovery:
          # instance-id must not be empty, must start with letter, end wit ha letter or digit, and have as interior characters ony
          # letter, digits, and hyphen
          instance-id: id:${random.uuid}
          # instance-id must not be empty, must start with letter, end wit ha letter or digit, and have as interior characters ony
          # letter, digits, and hyphen
          serviceName: name:${spring.application.name}
          # Consul needs this for health-check. Used for load-balancing stuff.
          #healthCheckPath: /actuator/health
          register: true
          register-health-check: true
          deregister: true
    datasource:
        driver-class-name: org.postgresql.Driver
        url: ${SPRING_DATASOURCE_URL}
        username: ${SPRING_DATASOURCE_USERNAME}
        password: ${SPRING_DATASOURCE_PASSWORD}
    jpa:
      hibernate:
        ddl-auto: none
        naming:
          physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
      show-sql: true
      properties:
        hibernate:
          format_sql: true
          globally_quoted_identifiers: true
          default_schema: ${SPRING_DATABASE_SCHEMA}
          dialect: org.hibernate.dialect.PostgreSQLDialect
    cache:
      type: redis
    redis:
      host: ${REDIS_HOST}
      port: ${REDIS_PORT}
      password: ${REDIS_PASSWORD}
      jedis:
        pool:
          max-total: 16
          max-idle: 8
          min-idle: 4
    kafka:
      consumer:
        bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS}
        group-id: ${KAFKA_GROUP_ID}
        auto-offset-reset: earliest
        key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
        value-deserializer: org.apache.kafka.common.serialization.StringDeserializer

          
logging:
  level:
    com: 
      lsoftware:
        voting: info   